{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","autoFocus","App","state","searchField","fetch","then","response","json","users","setState","this","filteredMonsters","filter","toLocaleLowerCase","includes","e","target","value","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+SAIaA,EAAO,SAACC,GAAD,OAClB,sBAAKC,UAAU,iBAAf,UACE,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACtB,6BAAKL,EAAMI,QAAQE,OACnB,4BAAIN,EAAMI,QAAQG,YCJTC,G,MAAW,SAACR,GAErB,OAAO,qBAAKC,UAAU,YAAf,SACND,EAAMS,SAASC,KAAI,SAACN,GAAD,OAChB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,WCLdM,G,MAAY,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,YAAaC,EAAkB,EAAlBA,aACtC,OACE,uBACEZ,UAAU,SACVa,KAAK,SACLF,YAAaA,EACbG,SAAUF,EACVG,WAAS,MCwDAC,E,kDA3Db,aAAe,IAAD,8BACZ,gBACKC,MAAQ,CACXC,YAAa,GACbV,SAAU,CACR,CACEH,KAAM,KACND,GAAI,MAEN,CACEC,KAAM,KACND,GAAI,QAXE,E,qDAiBd,WAAqB,IAAD,OAClBe,MAAM,8CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAW,EAAKC,SAAS,CAAEhB,SAAUe,S,oBAI/C,WAAU,IAAD,OACP,EAAkCE,KAAKR,MAA/BC,EAAR,EAAQA,YACJQ,EADJ,EAAqBlB,SACWmB,QAAO,SAACxB,GAAD,OACrCA,EAAQE,KAAKuB,oBAAoBC,SAASX,EAAYU,wBAGxD,OACE,sBAAK5B,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CACEW,YAAY,qBACZC,aAAc,SAACkB,GAAD,OAAO,EAAKN,SAAS,CAAEN,YAAaY,EAAEC,OAAOC,WAE7D,cAAC,EAAD,CAAUxB,SAAUkB,W,GAtCVO,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.09a803f3.chunk.js","sourcesContent":["import React from \"react\";\n\nimport \"./card.styles.css\";\n\nexport const Card = (props) => (\n  <div className=\"card-container\">\n    <img alt=\"monster\" src={`https://robohash.org/${props.monster.id}?set=set1&size=180x180`}/>\n    <h2>{props.monster.name}</h2>\n    <p>{props.monster.email}</p>\n  </div>\n);\n","import React from 'react';\nimport { Card } from '../card/card.component';\nimport './card-list.styles.css';\n\nexport const CardList = (props) => {\n    // TODO check if below key is needed...???\n    return <div className=\"card-list\">\n    {props.monsters.map((monster) => (\n        <Card key={monster.id} monster={monster}/>\n        ))}\n    </div>;\n}","import React from \"react\";\nimport \"./search-box.styles.css\";\n\nexport const SearchBox = ({placeholder, handleChange}) => {\n  return (\n    <input\n      className=\"search\"\n      type=\"search\"\n      placeholder={placeholder}\n      onChange={handleChange}\n      autoFocus\n    />\n  );\n};\n","import \"./App.css\";\nimport { Component } from \"react\";\nimport { CardList } from \"./components/card-list/card-list.component\";\nimport { SearchBox } from \"./components/search-box/search-box.component\";\nimport React from \"react\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      searchField: \"\",\n      monsters: [\n        {\n          name: \"m1\",\n          id: \"m1\",\n        },\n        {\n          name: \"m2\",\n          id: \"m2\",\n        },\n      ],\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((response) => response.json())\n      .then((users) => this.setState({ monsters: users }));\n\n  }\n\n  render() {\n    const { searchField, monsters } = this.state;\n    let filteredMonsters = monsters.filter((monster) =>\n      monster.name.toLocaleLowerCase().includes(searchField.toLocaleLowerCase())\n    );\n\n    return (\n      <div className=\"App\">\n        <h1>Monsters Rolodex</h1>\n        <SearchBox\n          placeholder=\"Search monsters...\"\n          handleChange={(e) => this.setState({ searchField: e.target.value })}\n        />\n        <CardList monsters={filteredMonsters} />\n      </div>\n    );\n  }\n}\n\n/*\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p> {state}</p>\n        <button onClick={() => this.setState({string: \"Hello\"});} </button>\n       \n      </header>\n    </div>\n  );\n}\n*/\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}